[tool.poetry]
name = "item-bot"
version = "1.0.0"
description = "A Telegram bot for managing shared items (servers, devices, accounts, etc.) in teams"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "bot.py"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
python-telegram-bot = "^22.0"
watchdog = "^3.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.0"
pytest = "^7.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
bot = "bot:main"
bot-watcher = "bot_watcher:main"

[tool.ruff]
# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.9+
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
