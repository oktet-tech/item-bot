[tool.poetry]
name = "item-bot"
version = "1.0.0"
description = "A Telegram bot for managing shared items (servers, devices, accounts, etc.) in teams"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "bot.py"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
python-telegram-bot = "^22.0"
watchdog = "^3.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.0"
pytest = "^7.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
bot = "bot:main"
bot-watcher = "bot_watcher:main"

[tool.ruff]
# Same as Black.
line-length = 120

# Assume Python 3.9+
target-version = 'py39'

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
skip-magic-trailing-comma = false
line-ending = 'auto'

[tool.ruff.lint]
select = [
    # pyflakes
    'F',
    # pycodestyle errors
    'E',
    # pycodestyle warnings
    'W',
    # mccabe
    'C90',
    # isort
    'I',
    # pep8-naming
    'N',
    # pyupgrade
    'UP',
    # flake8-2020
    'YTT',
    # flake8-bugbear
    'B',
    # flake8-builtins
    'A',
    # flake8-commas
    'COM',
    # flake8-comprehensions
    'C4',
    # flake8-debugger
    'T10',
    # flake8-django
    'DJ',
    # flake8-errmsg
    'EM',
    # flake8-executable
    'EXE',
    # flake8-future-annotations
    'FA',
    # flake8-implicit-str-concat
    'ISC',
    # flake8-import-conventions
    'ICN',
    # flake8-pie
    'PIE',
    # flake8-print
    'T20',
    # flake8-pyi
    'PYI',
    # flake8-pytest-style
    'PT',
    # flake8-quotes
    'Q',
    # flake8-raise
    'RSE',
    # flake8-return
    'RET',
    # flake8-simplify
    'SIM',
    # flake8-tidy-imports
    'TID',
    # flake8-type-checking
    'TCH',
    # flake8-gettext
    'INT',
    # eradicate
    'ERA',
    # pygrep-hooks
    'PGH',
    # Pylint
    'PL',
    # flynt
    'FLY',
    # NumPy-specific rules
    'NPY',
    # Ruff-specific rules
    'RUF',
]
ignore = [
    # overwriting some variables (seems to be usefull in some cases)
    'PLW2901',
    # disable rules that conflict with the formatter
    'COM812',
    'ISC001',
    'Q002',
    # We have small scripts and it's OK to have print instead of
    # logging library
    'T201',
    # We have a number of unicode niceness in the code
    'RUF001',
]

exclude = [
    "ts/doc/conf.py",
]

[tool.ruff.lint.flake8-quotes]
avoid-escape = false
inline-quotes = 'single'
docstring-quotes = 'double'
multiline-quotes = 'double'

[tool.ruff.lint.mccabe]
max-complexity = 16

[tool.ruff.lint.isort]
force-sort-within-sections = true
split-on-trailing-comma = true
lines-after-imports = 2

[tool.ruff.lint.pylint]
max-args = 8
max-branches = 30
max-statements = 100
max-returns = 7

[tool.black]
line-length = 96
target-version = ['py38']
skip-string-normalization = true
